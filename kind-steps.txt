-- if starting over from previous run...
kind delete cluster
docker system prune --volumes

alias getpod="kubectl -n tqtezos get pod"
alias descpod="kubectl -n tqtezos describe pod"
alias getjob="kubectl -n tqtezos get jobs"

-- make sure the directories ~/.tezos/client and ~/.tezos/node exist

-- before this, edit kind-config.yaml to contain your home directory name
kind create cluster --config=kind-config.yaml

docker build -t tqtezos .

kind load docker-image tqtezos

kubectl apply -f deployment/0000-namespace.yaml
kubectl apply -f deployment/0010-pv.yaml
-- kubectl get pv
-- kubectl -n tqtezos get pvc

kubectl apply -f deployment/0020-genkeys.yaml
-- kubectl -n tqtezos get pod
-- kubectl -n tqtezos logs genkeys-blahblah
-- kubectl describe pod -n tqtezos

-- Edit deployment/0030-configmap.yaml:
-- Paste the generated baker0 key into the parameters.json section of the file - replace the first
-- entry under bootstrap_accounts
-- Paste the generated genesis key into the nodeconfig.json section of the file - under
-- genesis_pubkey

-- (This gets the genesis key if using the bash shell)
-- cat ~/.tezos/client/public_keys |jq '.[0] | select(.name=="genesis").value'|sed s/\"//g|cut -f 2 -d :

kubectl apply -f deployment/0030-configmap.yaml

-- make sure ~/.tezos/node dirs exist and are empty
-- rm -rf ~/.tezos/node
-- mkdir ~/.tezos/node

kubectl apply -f deployment/0040-genid.yaml

-- kubectl -n tqtezos get pod
-- kubectl -n tqtezos logs genid-blahblah

kubectl apply -f deployment/0050-startnode.yaml
-- kubectl -n tqtezos get pod
-- kubectl -n tqtezos logs tezos-rpc-blahblah

kubectl apply -f deployment/0060-activate.yaml
